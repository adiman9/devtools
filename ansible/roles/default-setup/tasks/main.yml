---


- name: Creating a 4GB swap file
  command: fallocate -l 4G /swapfile
  register: write_swapfile
  when: ansible_memory_mb.real.total + ansible_memory_mb.swap.total < 4096
  ignore_errors: yes

- name: Set swap file permissions
  file:
    path: /swapfile
    mode: 0600
  when: write_swapfile.changed
  ignore_errors: yes

- name: Build swapfile
  command: mkswap /swapfile
  when: write_swapfile.changed
  ignore_errors: yes

- name: Enable swapfile
  command: swapon /swapfile
  when: write_swapfile.changed
  ignore_errors: yes

- name: Add swapfile to /etc/fstab
  lineinfile: dest=/etc/fstab line="/swapfile   none    swap    sw    0   0" state=present
  when: write_swapfile.changed

- name: Update APT package cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Upgrade all packages to the latest version
  apt:
    upgrade: dist

- name: Add the user "{{ username | default(common_deploy_username) }}" with sudo priveledge
  user:
    name: "{{ username | default(common_deploy_username) }}"
    password: "{{ password | password_hash('sha512') | default(common_deploy_password) }}"
    shell: /bin/bash
    groups: sudo
    append: yes

- name: Disallow password authentication
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: Restart ssh

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
  notify: Restart ssh

- name: Disallow challenge response auth
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^ChallengeResponseAuthentication"
              line="ChallengeResponseAuthentication no"
              state=present
  notify: Restart ssh

- name: Set authorized key took from file
  authorized_key:
    user: "{{ username | default(common_deploy_username) }}"
    state: present
    key: "{{ lookup('file', item) }}"
  with_items: "{{ common_deploy_public_keys }}"

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ common_required_packages }}"
  register: install_packages

- name: Install optional packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ common_optional_packages }}"
  register: install_optional_packages

- name: Adjust APT update intervals
  template: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

- name: Configure ufw defaults
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  with_items:
    - { direction: 'incoming', policy: 'allow' }
    - { direction: 'outgoing', policy: 'allow' }
  when: install_packages.changed

- name: Configure ufw rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items:
    - { rule: 'allow', port: '{{ ssh_port | default("22") }}', proto: 'tcp' }
    - { rule: 'allow', port: '80', proto: 'tcp' }
    - { rule: 'allow', port: '443', proto: 'tcp' }
  when: install_packages.changed

- name: ufw enable
  command: ufw --force enable
  when: install_packages.changed

- name: Set up Postfix to relay mail
  debconf:
    name: postfix
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - { question: 'postfix/mailname', value: '{{ ansible_fqdn }}', vtype: 'string' }
    - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }

- name: Email log summary daily
  lineinfile:
    dest: /etc/cron.daily/00logwatch
    regexp: "^/usr/sbin/logwatch"
    line: "/usr/sbin/logwatch --output mail --mailto {{ common_logwatch_email }} --detail high"
    state: present
    create: yes

- name: Enabling fail2ban services...
  service:
    name: fail2ban
    state: started
    enabled: yes
  when: install_packages.changed
